// <auto-generated />
using System;
using Dropship.Website.Backend.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dropship.Website.Backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20201228234609_AddStarCount")]
    partial class AddStarCount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.ModBuildEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4");

                    b.Property<int>("ModId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16) CHARACTER SET utf8mb4");

                    b.Property<int>("VersionCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModId", "Version");

                    b.HasIndex("ModId", "VersionCode");

                    b.ToTable("ModBuilds");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.ModDepEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DepModBuildId")
                        .HasColumnType("int");

                    b.Property<int>("ModBuildId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepModBuildId");

                    b.HasIndex("ModBuildId");

                    b.ToTable("ModDeps");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.ModEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("mediumtext");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4");

                    b.Property<int>("StarCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.PluginBuildEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4");

                    b.Property<int>("PluginId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16) CHARACTER SET utf8mb4");

                    b.Property<int>("VersionCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PluginId", "Version");

                    b.HasIndex("PluginId", "VersionCode");

                    b.ToTable("PluginBuilds");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.PluginEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("mediumtext");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4");

                    b.Property<int>("ServerDistroId")
                        .HasColumnType("int");

                    b.Property<int>("StarCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.ToTable("Plugins");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.ServerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320) CHARACTER SET utf8mb4");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IpAddress")
                        .HasColumnType("int(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4");

                    b.Property<int>("OwnerUserId")
                        .HasColumnType("int");

                    b.Property<ushort>("Port")
                        .HasColumnType("smallint unsigned");

                    b.Property<int>("StarCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("IpAddress", "Port");

                    b.ToTable("ServerList");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320) CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Xml")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.ModBuildEntity", b =>
                {
                    b.HasOne("Dropship.Website.Backend.Database.Entities.ModEntity", "Mod")
                        .WithMany("Builds")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.ModDepEntity", b =>
                {
                    b.HasOne("Dropship.Website.Backend.Database.Entities.ModBuildEntity", "DepModBuild")
                        .WithMany("Dependents")
                        .HasForeignKey("DepModBuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dropship.Website.Backend.Database.Entities.ModBuildEntity", "ModBuild")
                        .WithMany("Dependencies")
                        .HasForeignKey("ModBuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepModBuild");

                    b.Navigation("ModBuild");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.ModEntity", b =>
                {
                    b.HasOne("Dropship.Website.Backend.Database.Entities.UserEntity", "Creator")
                        .WithMany("Mods")
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.PluginBuildEntity", b =>
                {
                    b.HasOne("Dropship.Website.Backend.Database.Entities.PluginEntity", "Plugin")
                        .WithMany("Builds")
                        .HasForeignKey("PluginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plugin");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.PluginEntity", b =>
                {
                    b.HasOne("Dropship.Website.Backend.Database.Entities.UserEntity", "Creator")
                        .WithMany("Plugins")
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.ServerEntity", b =>
                {
                    b.HasOne("Dropship.Website.Backend.Database.Entities.UserEntity", "Owner")
                        .WithMany("Servers")
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.ModBuildEntity", b =>
                {
                    b.Navigation("Dependencies");

                    b.Navigation("Dependents");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.ModEntity", b =>
                {
                    b.Navigation("Builds");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.PluginEntity", b =>
                {
                    b.Navigation("Builds");
                });

            modelBuilder.Entity("Dropship.Website.Backend.Database.Entities.UserEntity", b =>
                {
                    b.Navigation("Mods");

                    b.Navigation("Plugins");

                    b.Navigation("Servers");
                });
#pragma warning restore 612, 618
        }
    }
}
